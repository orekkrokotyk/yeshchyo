from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

import asyncio

import static
import db_function

def admin_menu():
    buttons = [
            [types.InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data='–ú–µ–Ω—é')],
            [types.InlineKeyboardButton(text='–ó–∞–∫–∞–∑—ã', callback_data='–ó–∞–∫–∞–∑—ã')]
        ]
        
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

class Admin(StatesGroup):
    pas = State()
    req_menu = State()

class Menu(StatesGroup):
    type = State()

bot = Bot(token="7898989327:AAHJWKTbd4LZ4XkHjiG3a5oyi2eeO4Dnf8k")
dp = Dispatcher()

@dp.message(Command(commands=['start', 'restart']))
async def start(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã –∞–¥–º–∏–Ω –≤–≤–∏–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin")

@dp.message(Command('admin'))
async def admin_message(message: Message, state: FSMContext):
    await state.set_state(Admin.pas)
    await message.answer("–í–≤–∏–¥–∏—Ç–µ –∫–ª—é—á—å")

@dp.message(Admin.pas)
async def check_admin(message: Message, state: FSMContext):
    if message.text == static.admin_key:
        await state.set_state(Admin.req_menu)

        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ö–Ω—é", reply_markup=admin_menu())
    else:
        await message.answer("–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –µ—â—ë –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏–ª–∏ /restart –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏")


@dp.callback_query(F.data == '–ú–µ–Ω—é', Admin.req_menu)
async def callback_query(callback: types.CallbackQuery, state: FSMContext):
    buttons = [
        [
            types.InlineKeyboardButton(text="–ù–∞–ø–∏—Ç–æ–∫ü•§", callback_data="drink"),
            types.InlineKeyboardButton(text="–õ–∞–ø—à–∞ ü•°", callback_data="noodle")
        ],
        [types.InlineKeyboardButton(text="–ë—É—Ä–≥–µ—Ä üçî", callback_data="burger")]
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=buttons)
    await state.set_state(Menu.type)
    await callback.message.answer("–¢—É—Ç–æ—à–Ω–∏–µ —Ä–∞–∑–¥–µ–ª—ã –º–µ–Ω—é", reply_markup=keyboard)
    await callback.answer()

@dp.callback_query(Menu.type)
async def callback_query(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer(db_function.element_menu(callback.data))

async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)



if __name__ == "__main__":
    asyncio.run(main())